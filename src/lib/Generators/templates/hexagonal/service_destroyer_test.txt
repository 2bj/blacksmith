<?php namespace Services\{{Entities}};

/**
 * This class is responsible for destroying {{Entity}} models.
 */

use Shared\Contracts\Repositories\{{Entity}}RepositoryInterface;
use Shared\Contracts\Notification\DestroyerInterface;

class {{Entity}}Destroyer
{

    /**
     * Attempt to destroy the {{instance}} and
     * notify the $listener of the success or failure.  The
     * $attributes are passed in as a convenience in case they
     * are needed
     * 
     * @param  {{Entity}}RepositoryInterface $repository
     * @param  DestroyerInterface       $listener 
     * @param  mixed                    $identity
     * @return mixed - returned value from the $listener 
     */
    public function destroy({{Entity}}RepositoryInterface $repository, DestroyerInterface $listener, $identity)
    {
        $instance = $repository->findOrFail($identity);

        if ($repository->delete($instance)) {

            return $listener->destroySucceeded($instance);

        } else {

            return $listener->destroyFailed($instance);
        }
    }
}
